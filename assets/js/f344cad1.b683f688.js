"use strict";(self.webpackChunkgp_doc_github_io=self.webpackChunkgp_doc_github_io||[]).push([[6667],{2554:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=n(6070),t=n(5710);const i={sidebar_position:6},a="GPA(GraphQL Persistence API)",o={id:"tutorial/graphql-persistence-api",title:"GPA(GraphQL Persistence API)",description:"\u5b9a\u4e49 GraphQL \u6301\u4e45\u5316\u63a5\u53e3",source:"@site/docs/tutorial/graphql-persistence-api.md",sourceDirName:"tutorial",slug:"/tutorial/graphql-persistence-api",permalink:"/docs/tutorial/graphql-persistence-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"GPI(GraphQL API)",permalink:"/docs/tutorial/graphql-api"},next:{title:"\u5c0f\u7ed3",permalink:"/docs/tutorial/summary"}},p={},l=[{value:"\u751f\u6210 GPA \u6ce8\u89e3",id:"\u751f\u6210-gpa-\u6ce8\u89e3",level:2},{value:"\u5b9a\u4e49 GPA \u63a5\u53e3",id:"\u5b9a\u4e49-gpa-\u63a5\u53e3",level:2},{value:"\u67e5\u8be2\u63a5\u53e3",id:"\u67e5\u8be2\u63a5\u53e3",level:2},{value:"\u666e\u901a\u67e5\u8be2",id:"\u666e\u901a\u67e5\u8be2",level:3},{value:"\u67e5\u8be2\u53d8\u91cf",id:"\u67e5\u8be2\u53d8\u91cf",level:3},{value:"\u67e5\u8be2\u5b57\u6bb5",id:"\u67e5\u8be2\u5b57\u6bb5",level:3},{value:"\u7edf\u8ba1\u67e5\u8be2",id:"\u7edf\u8ba1\u67e5\u8be2",level:3},{value:"\u53d8\u66f4\u63a5\u53e3",id:"\u53d8\u66f4\u63a5\u53e3",level:2},{value:"\u65b0\u589e",id:"\u65b0\u589e",level:3},{value:"\u66f4\u65b0",id:"\u66f4\u65b0",level:3},{value:"\u5220\u9664",id:"\u5220\u9664",level:3},{value:"<strong>\u6ce8\u89e3\u8bf4\u660e</strong>",id:"\u6ce8\u89e3\u8bf4\u660e",level:2},{value:"\u63a5\u53e3\u6ce8\u89e3",id:"\u63a5\u53e3\u6ce8\u89e3",level:3}];function u(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"gpagraphql-persistence-api",children:"GPA(GraphQL Persistence API)"}),"\n",(0,s.jsx)(r.p,{children:"\u5b9a\u4e49 GraphQL \u6301\u4e45\u5316\u63a5\u53e3"}),"\n",(0,s.jsx)(r.p,{children:"GraphQL Persistence API \u57fa\u4e8e Java \u63a5\u53e3\u548c\u6ce8\u89e3\u5b9a\u4e49, \u5c06\u63a5\u53e3\u65b9\u6cd5\u6620\u5c04\u4e3a GraphQL \u67e5\u8be2\u6216\u53d8\u66f4, \u63d0\u4f9b\u4ee3\u7801\u7ea7\u7684\u6570\u636e\u8bbf\u95ee\u53ca\u64cd\u4f5c\u80fd\u529b, Graphoenix \u7f16\u8bd1\u5668\u4f1a\u9488\u5bf9\u4e0d\u540c\u6570\u636e\u5e93\u548c\u5b58\u50a8\u65b9\u6848\u63d0\u4f9b\u4e0d\u540c\u7684\u5b9e\u73b0. \u5982\u679c\u4f60\u4f7f\u7528\u8fc7 JPA(Java Persistence API), GPA \u4e0e Repository \u6709\u4e00\u5b9a\u7684\u76f8\u4f3c\u6027"}),"\n",(0,s.jsx)(r.mermaid,{value:"flowchart LR\n    code[\"// ProductRepository.java\n    @GraphQLOperation\n    public interface ProductRepository {\n    &emsp;@Query(product = @ProductQueryArguments(name = @StringExpression(opr = Operator.EQ, $val = &quot;name&quot;)))\n    &emsp;Product queryProductByName(String name);\n    }\"]\n    query[\"// query.graphql\n    query queryProductByName($name: String) {\n    &emsp;product(name: {opr: EQ, val: $name}) {\n    &emsp;&emsp;id\n    &emsp;&emsp;name\n    &emsp;&emsp;price\n    &emsp;}\n    }\"]\n    dml[\"// query.sql\n    SELECT JSON_EXTRACT(\n    &emsp;JSON_OBJECT(\n    &emsp;&emsp;'id', product_1.`id`,\n    &emsp;&emsp;'name', product_1.`name`,\n    &emsp;&emsp;'price', product_1.`price`\n    &emsp;) ,\n    '$')\n    FROM `product` AS product_1\n    WHERE product_1.name = :name\"]\n    mongodb[\"database\n    &emsp;.getCollection(&quot;product&quot;)\n    &emsp;.find(eq(&quot;name&quot;, name))\"]\n    code -- \u8f6c\u8bd1 --\x3e query\n    query -- MySQL --\x3e dml\n    query -- MongoDB --\x3e mongodb\n    style code text-align:left\n    style query text-align:left\n    style dml text-align:left\n    style mongodb text-align:left"}),"\n",(0,s.jsx)(r.h2,{id:"\u751f\u6210-gpa-\u6ce8\u89e3",children:"\u751f\u6210 GPA \u6ce8\u89e3"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/docs/tutorial/graphql-api#%E7%94%9F%E6%88%90-graphql-entities",children:"\u4f7f\u7528 Gradle \u63d2\u4ef6\u751f\u6210\u5b9a\u4e49 GPA \u63a5\u53e3\u9700\u8981\u7684\u6ce8\u89e3\u548c Java Entitis"}),", \u63d2\u4ef6\u4f1a\u6839\u636e GraphQL \u5b9a\u4e49\u751f\u6210 ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Query"})})," \u548c ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Mutation"})})," \u6ce8\u89e3, \u6ce8\u89e3\u4e2d\u5305\u542b\u6240\u6709 GraphQL \u63a5\u53e3\u5b9a\u4e49"]}),"\n",(0,s.jsx)(r.mermaid,{value:'flowchart LR\n    types["// types.graphql\n    type Product {\n    &emsp;id: ID!\n    &emsp;name: String!\n    &emsp;price: Float!\n    }"]\n    schema["// schema.graphql\n    schema {\n    &emsp;query: Query\n    &emsp;mutation: Mutation\n    }\n    type Query {\n    &emsp;product: Product\n    &emsp;productList: [Product]\n    &emsp;productConnection: ProductConnection\n    }\n    type Mutation {\n    &emsp;product: Product\n    &emsp;productList: [Product]\n    }\n    input ProductListQueryArguments {\n    &emsp;name: StringExpression\n    &emsp;price: FloatExpression\n    &emsp;cond: Conditional = AND\n    &emsp;orderBy: ProductOrderBy\n    &emsp;groupBy: [String!]\n    &emsp;offset: Int\n    &emsp;first: Int\n    }\n    input ProductListMutationArguments {\n    &emsp;name: String\n    &emsp;price: Float\n    &emsp;isDeprecated: Boolean = false\n    &emsp;list: [ProductInput]\n    &emsp;where: ProductExpression\n    }"]\n    query["// @Query.java\n    @Target(ElementType.METHOD)\n    public @interface Query {\n    &emsp;ProductQueryArguments product() default @ProductQueryArguments;\n    &emsp;ProductListQueryArguments productList() default @ProductListQueryArguments;\n    &emsp;ProductConnectionQueryArguments productConnection() default @ProductConnectionQueryArguments;\n    }"]\n    mutation["// @Mutation.java\n    @Target(ElementType.METHOD)\n    public @interface Mutation {\n    &emsp;ProductMutationArguments product() default @ProductMutationArguments;\n    &emsp;ProductListMutationArguments productList() default @ProductListMutationArguments;\n    }"]\n    queryArguments["// @ProductListQueryArguments.java\n    @Target(ElementType.METHOD)\n    public @interface ProductListQueryArguments {\n    &emsp;StringExpression name() default @StringExpression;\n    &emsp;FloatExpression price() default @FloatExpression;\n    &emsp;Conditional cond() default Conditional.AND;\n    &emsp;ProductOrderBy orderBy() default @ProductOrderBy;\n    &emsp;String[] groupBy() default {};\n    &emsp;int offset() default 0;\n    &emsp;int first() default 0;\n    }"]\n    mutationArguments["// @ProductListMutationArguments.java\n    @Target(ElementType.METHOD)\n    public @interface ProductListMutationArguments {\n    &emsp;String name() default &quot;&quot;;\n    &emsp;float price() default 0;\n    &emsp;boolean isDeprecated() default false;\n    &emsp;ProductInput[] list() default {};\n    &emsp;ProductExpression where() default @ProductExpression;\n    }"]\n    types -- \u7f16\u8bd1 --\x3e schema -- \u751f\u6210 --\x3e query & mutation & queryArguments & mutationArguments\n    queryArguments -. \u5f15\u7528 .-> query\n    mutationArguments -. \u5f15\u7528 .-> mutation\n    style types text-align:left\n    style schema text-align:left\n    style query text-align:left\n    style mutation text-align:left\n    style queryArguments text-align:left\n    style mutationArguments text-align:left'}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsxs)(r.strong,{children:["\u8bf7\u6ce8\u610f\u6b64\u5904\u7684 ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Query"})})," \u548c ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Mutation"})})," \u6ce8\u89e3\u5e76\u4e0d\u662f ",(0,s.jsx)(r.code,{children:"org.eclipse.microprofile.graphql"})," \u5305\u4e0b\u7684 ",(0,s.jsx)(r.code,{children:"@Query"})," \u548c ",(0,s.jsx)(r.code,{children:"@Mutation"})]})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-txt",children:"|-- order-package                             \u8ba2\u5355\u5305\n    |-- build.gradle\n    |-- src\n        |-- main\n        |   |-- java\n        |       |-- demo.gp.order\n        |           |-- api\n        |               |-- SystemApi.java    \u7cfb\u7edfAPI\n        |           |-- dto\n        |           |-- repository\n                    // highlight-start\n        |           |   |-- annotation        GPA\u6ce8\u89e3\n                    // highlight-end\n        |           |   |-- directive         \u6307\u4ee4\u6ce8\u89e3\n        |           |   |-- enumType          \u679a\u4e3e\u7c7b\u578b\n        |           |   |-- inputObjectType   Input\u7c7b\u578b\n        |           |   |-- objectType        Object\u7c7b\u578b\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u5b9a\u4e49-gpa-\u63a5\u53e3",children:"\u5b9a\u4e49 GPA \u63a5\u53e3"}),"\n",(0,s.jsxs)(r.p,{children:["\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"@GraphQLOperation"})," \u6ce8\u89e3\u6765\u5b9a\u4e49 GPA \u63a5\u53e3"]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"\u65b0\u5efa GPA \u63a5\u53e3"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-txt",children:"|-- order-package                             \u8ba2\u5355\u5305\n    |-- build.gradle\n    |-- src\n        |-- main\n        |   |-- java\n        |       |-- demo.gp.order\n        |           |-- dto\n        |           |   |-- annotation              GPA\u6ce8\u89e3\n        |           |   |-- directive               \u6307\u4ee4\u6ce8\u89e3\n        |           |   |-- enumType                \u679a\u4e3e\u7c7b\u578b\n        |           |   |-- inputObjectType         Input\u7c7b\u578b\n        |           |   |-- objectType              Object\u7c7b\u578b\n                    // highlight-start\n        |           |-- repository\n        |               |-- UserRepository.java     \u7528\u6237Repository\n                    // highlight-end\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"\u5b9a\u4e49\u63a5\u53e3\u7c7b"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"package demo.gp.order.repository;\n\nimport io.graphoenix.spi.annotation.GraphQLOperation;\n\n// highlight-start\n@GraphQLOperation // \u4f7f\u7528@GraphQLOperation \u6ce8\u89e3\u6807\u8bb0\u63a5\u53e3\u6240\u5728 CDI Bean\n// highlight-end\npublic interface UserRepository {\n\n    // \u5b9a\u4e49\u63a5\u53e3\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u67e5\u8be2\u63a5\u53e3",children:"\u67e5\u8be2\u63a5\u53e3"}),"\n",(0,s.jsxs)(r.p,{children:["\u4f7f\u7528 ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Query"})})," \u6ce8\u89e3\u6765\u5b9a\u4e49\u67e5\u8be2\u63a5\u53e3, \u63a5\u53e3\u4f1a\u6dfb\u52a0\u5230\u67e5\u8be2\u7c7b\u578b\u4e2d"]}),"\n",(0,s.jsx)(r.h3,{id:"\u666e\u901a\u67e5\u8be2",children:"\u666e\u901a\u67e5\u8be2"}),"\n",(0,s.jsx)(r.p,{children:"\u4f8b: \u67e5\u8be2\u6240\u6709 VIP \u7528\u6237"}),"\n",(0,s.jsxs)(r.p,{children:["\u5b9a\u4e49 queryVIPUserList \u65b9\u6cd5, \u4f7f\u7528 ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Query"})})," \u6ce8\u89e3\u6807\u8bb0\u63a5\u53e3\u65b9\u6cd5, \u8bf7\u6ce8\u610f, \u6b64\u5904\u7684 ",(0,s.jsx)(r.code,{children:"@Query"})," \u6ce8\u89e3\u662f\u5728\u4e4b\u524d\u751f\u6210\u7684\u7684",(0,s.jsx)(r.a,{href:"/docs/tutorial/graphql-api#%E7%94%9F%E6%88%90-graphql-entities",children:"GPA \u6ce8\u89e3"}),", ",(0,s.jsx)(r.strong,{children:"\u5e76\u975e org.eclipse.microprofile.graphql.Query"})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"package demo.gp.order.repository;\n\n// highlight-start\nimport demo.gp.order.dto.annotation.Query;\n// highlight-end\nimport demo.gp.order.dto.annotation.UserListQueryArguments;\nimport demo.gp.order.dto.annotation.UserTypeExpression;\nimport demo.gp.order.dto.enumType.UserType;\nimport demo.gp.order.dto.objectType.User;\nimport io.graphoenix.core.dto.enumType.Operator;\nimport io.graphoenix.spi.annotation.GraphQLOperation;\n\nimport java.util.List;\n\n// highlight-start\n@GraphQLOperation // \u4f7f\u7528@GraphQLOperation \u6ce8\u89e3\u6807\u8bb0\u63a5\u53e3\u6240\u5728 CDI Bean\n// highlight-end\npublic interface UserRepository {\n\n    // highlight-start\n    // \u67e5\u8be2\u6240\u6709\u7528\u6237\u7c7b\u578b=VIP\u7684User\n    @Query(userList = @UserListQueryArguments(userType = @UserTypeExpression(opr = Operator.EQ, val = UserType.VIP)))\n    // highlight-end\n    Mono<List<User>> queryVIPUserList();\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"query queryVIPUserList {\n  userList(userType: { opr: EQ, val: VIP }) {\n    id\n    name\n    email\n    userType\n    # ...\n  }\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6d4b\u8bd5\u6bcf\u4e00\u4e2a User \u7684 userType"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"package demo.gp.order.test;\n\nimport demo.gp.order.dto.enumType.UserType;\nimport demo.gp.order.dto.objectType.User;\nimport demo.gp.order.repository.UserRepository;\nimport io.nozdormu.spi.context.BeanContext;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void queryVIPUserListTest() {\n        List<User> userLit = userRepository.queryVIPUserList().block();\n        assertAll(\n                userLit.stream().map((item) -> () -> assertEquals(item.getUserType(), UserType.VIP))\n        );\n    }\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"\u67e5\u8be2\u53d8\u91cf",children:"\u67e5\u8be2\u53d8\u91cf"}),"\n",(0,s.jsxs)(r.p,{children:["\u6ce8\u89e3\u4e2d\u4ee5 ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"$"})})," \u5f00\u5934\u7684\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u4f5c\u4e3a\u53d8\u91cf, \u7b49\u540c\u4e8e GraphQL \u4e2d\u7684 ",(0,s.jsx)(r.a,{href:"https://graphql.org/learn/queries/#variables",children:"Variables"})]}),"\n",(0,s.jsx)(r.p,{children:"\u4f8b: \u6839\u636e\u7528\u6237\u7c7b\u578b\u53d8\u91cf\u67e5\u8be2\u7528\u6237"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'package demo.gp.order.repository;\n\n// highlight-start\nimport demo.gp.order.dto.annotation.Query;\n// highlight-end\nimport demo.gp.order.dto.annotation.UserListQueryArguments;\nimport demo.gp.order.dto.annotation.UserTypeExpression;\nimport demo.gp.order.dto.enumType.UserType;\nimport demo.gp.order.dto.objectType.User;\nimport io.graphoenix.core.dto.enumType.Operator;\nimport io.graphoenix.spi.annotation.GraphQLOperation;\n\nimport java.util.List;\n\n@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    // \u67e5\u8be2\u6240\u6709\u7528\u6237\u7c7b\u578b=userType\u53c2\u6570\u7684User\n    @Query(userList = @UserListQueryArguments(userType = @UserTypeExpression(opr = Operator.EQ, $val = "userType")))\n    // highlight-end\n    Mono<List<User>> queryUserListByUserType(UserType userType);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"query queryUserListByUserType($userType: UserType) {\n  userList(userType: { opr: EQ, val: $userType }) {\n    id\n    name\n    email\n    userType\n    # ...\n  }\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6d4b\u8bd5\u6bcf\u4e00\u4e2a User \u7684 userType"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void queryUserListByUserTypeTest() {\n        List<User> userLit = userRepository.queryUserListByUserType(UserType.REGULAR).block();\n        assertAll(\n                userLit.stream().map((item) -> () -> assertEquals(item.getUserType(), UserType.REGULAR))\n        );\n    }\n}\n"})}),"\n",(0,s.jsx)(r.h3,{id:"\u67e5\u8be2\u5b57\u6bb5",children:"\u67e5\u8be2\u5b57\u6bb5"}),"\n",(0,s.jsxs)(r.p,{children:["GPA \u63a5\u53e3\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u53ea\u4f1a\u67e5\u8be2\u6240\u6709 Scalar \u548c Enum \u5b57\u6bb5, \u53ef\u4ee5\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"@SelectionSet"})," \u6ce8\u89e3\u81ea\u5b9a\u4e49\u67e5\u8be2\u5b57\u6bb5"]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"\u4f8b: \u5b9a\u4e49\u7528\u6237\u67e5\u8be2, \u53ea\u67e5\u8be2 name \u5b57\u6bb5"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    @Query(userList = @UserListQueryArguments(userType = @UserTypeExpression(opr = Operator.EQ, $val = "userType")))\n    // highlight-start\n    // \u67e5\u8be2name\u5b57\u6bb5\n    @SelectionSet("{ name }")\n    // highlight-end\n    Mono<List<User>> queryUserNameListByUserType(UserType userType);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"query queryUserNameListByUserType($userType: UserType) {\n  userList(userType: { opr: EQ, val: $userType }) {\n    name\n  }\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6d4b\u8bd5\u6bcf\u4e00\u4e2a User \u7684 \u8fd4\u56de\u5b57\u6bb5, \u9664 name \u5b57\u6bb5\u5916\u5168\u90e8\u4e3a null"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void queryUserNameListByUserTypeTest() {\n        List<User> userLit = userRepository.queryUserNameListByUserType(UserType.REGULAR).block();\n        assertAll(\n                userLit.stream().map((item) ->\n                        () -> assertAll(\n                                () -> assertNotNull(item.getName()),\n                                () -> assertNull(item.getId()),\n                                () -> assertNull(item.getUserType()),\n                                () -> assertNull(item.getEmail()),\n                                () -> assertNull(item.getPhoneNumbers())\n                        )\n                )\n        );\n    }\n}\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"\u4f8b: \u67e5\u8be2 Alice \u7684\u8ba2\u5355"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"\u4f7f\u7528 name \u53c2\u6570\u4f5c\u4e3a\u7528\u6237\u540d\u67e5\u8be2\u53d8\u91cf, \u67e5\u8be2\u7528\u6237\u7684\u8ba2\u5355\u4fe1\u606f"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    @Query(user = @UserQueryArguments(name = @StringExpression(opr = Operator.EQ, $val = "name")))\n    @SelectionSet("{ name orders { items { product { name } quantity } } }")\n    // highlight-end\n    Mono<User> queryUserOrdersListByName(String name);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"query queryUserOrdersListByName($name: String) {\n  userList(userType: { opr: EQ, val: $name }) {\n    name\n    orders {\n      items {\n        product {\n          name\n        }\n        quantity\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"\u6d4b\u8bd5\u6bcf\u4e00\u4e2a User \u7684 \u8ba2\u5355\u4fe1\u606f"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void queryUserOrdersListByNameTest() {\n        User user = userRepository.queryUserOrdersListByName("Alice").block();\n        assertAll(\n                () -> assertEquals(user.getOrders().size(), 1),\n                () -> assertEquals(new ArrayList<>(user.getOrders()).get(0).getItems().size(), 2),\n                () -> assertEquals(new ArrayList<>(new ArrayList<>(user.getOrders()).get(0).getItems()).get(0).getProduct().getName(), "Laptop"),\n                () -> assertEquals(new ArrayList<>(new ArrayList<>(user.getOrders()).get(0).getItems()).get(0).getQuantity(), 1),\n                () -> assertEquals(new ArrayList<>(new ArrayList<>(user.getOrders()).get(0).getItems()).get(1).getProduct().getName(), "Tablet"),\n                () -> assertEquals(new ArrayList<>(new ArrayList<>(user.getOrders()).get(0).getItems()).get(1).getQuantity(), 2)\n        );\n    }\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"\u7edf\u8ba1\u67e5\u8be2",children:"\u7edf\u8ba1\u67e5\u8be2"}),"\n",(0,s.jsxs)(r.p,{children:["GPA \u63a5\u53e3\u540c\u6837\u652f\u6301",(0,s.jsx)(r.a,{href:"/docs/tutorial/query#%E7%BB%9F%E8%AE%A1",children:"\u7edf\u8ba1\u67e5\u8be2"})]}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"\u4f8b: \u5206\u7ec4\u67e5\u8be2\u666e\u901a\u7528\u6237\u548c\u4f1a\u5458\u7528\u6237\u7684\u6570\u91cf"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    @Query(userList = @UserListQueryArguments(groupBy = {"userType"}))\n    @SelectionSet("{ userType idCount }")\n    // highlight-end\n    Mono<List<User>> queryUserCountByUserType();\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:'query queryUserCountByUserType {\n  userList(groupBy: ["userType"]) {\n    userType\n    idCount\n  }\n}\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void queryUserCountByUserTypeTest() {\n        List<User> userList = userRepository.queryUserCountByUserType().block();\n        assertAll(\n                () -> assertEquals(userList.size(), 2),\n                () -> assertEquals(new ArrayList<>(userList).get(0).getUserType(), UserType.VIP),\n                () -> assertEquals(new ArrayList<>(userList).get(0).getIdCount(), 12),\n                () -> assertEquals(new ArrayList<>(userList).get(1).getUserType(), UserType.REGULAR),\n                () -> assertEquals(new ArrayList<>(userList).get(1).getIdCount(), 12)\n        );\n    }\n}\n"})}),"\n",(0,s.jsxs)(r.ol,{start:"2",children:["\n",(0,s.jsx)(r.li,{children:"\u4f8b: \u67e5\u8be2\u4ef7\u683c\u5728 300 \u4ee5\u5185, \u4ef7\u683c\u6700\u9ad8\u7684\u4ea7\u54c1"}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface ProductRepository {\n\n    // highlight-start\n    @Query(product = @ProductQueryArguments(price = @FloatExpression(opr = Operator.LTE, $val = "price")))\n    @SelectionSet("{ name priceMax }")\n    // highlight-end\n    Mono<Product> queryPriceMaxLessThan(Float price);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"query queryPriceMaxLessThan($price: Float) {\n  product(opr: LTE, val: $price) {\n    name\n    priceMax\n  }\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@ExtendWith(TestResultLoggerExtension.class)\npublic class ProductRepositoryTest {\n\n    private final ProductRepository productRepository = BeanContext.get(ProductRepository.class);\n\n    @Test\n    void queryPriceMaxLessThanTest() {\n        Product product = productRepository.queryPriceMaxLessThan(300.00f).block();\n        assertAll(\n                () -> assertEquals(product.getName(), "Tablet"),\n                () -> assertEquals(product.getPriceMax(), 299.99f)\n        );\n    }\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"\u53d8\u66f4\u63a5\u53e3",children:"\u53d8\u66f4\u63a5\u53e3"}),"\n",(0,s.jsxs)(r.p,{children:["\u4f7f\u7528 ",(0,s.jsx)(r.a,{href:"#%E6%8E%A5%E5%8F%A3%E6%B3%A8%E8%A7%A3",children:(0,s.jsx)(r.code,{children:"@Mutation"})})," \u6ce8\u89e3\u6807\u8bb0\u63a5\u53e3\u65b9\u6cd5, \u8bf7\u6ce8\u610f, \u6b64\u5904\u7684 ",(0,s.jsx)(r.code,{children:"@Mutation"})," \u6ce8\u89e3\u662f\u5728\u4e4b\u524d\u751f\u6210\u7684\u7684",(0,s.jsx)(r.a,{href:"/docs/tutorial/graphql-api#%E7%94%9F%E6%88%90-graphql-entities",children:"GPA \u6ce8\u89e3"}),", ",(0,s.jsx)(r.strong,{children:"\u5e76\u975e org.eclipse.microprofile.graphql.Mutation"})]}),"\n",(0,s.jsx)(r.h3,{id:"\u65b0\u589e",children:"\u65b0\u589e"}),"\n",(0,s.jsx)(r.p,{children:"\u4f8b: \u65b0\u589e\u7528\u6237 Yara"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    @Mutation(user = @UserMutationArguments($input = "userInput"))\n    // highlight-end\n    @SelectionSet("{ id name email userType }")\n    Mono<User> mutationUser(UserInput userInput);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u53d8\u66f4"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"mutation mutationUser($userInput: UserInput) {\n  user(input: $userInput) {\n    id\n    name\n    email\n    userType\n  }\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void mutationUserTest() {\n        UserInput userInput = new UserInput();\n        userInput.setName("Yara");\n        userInput.setEmail("yara@example.com");\n        userInput.setUserType(UserType.VIP);\n        User user = userRepository.mutationUser(userInput).block();\n        assertAll(\n                () -> assertNotNull(user.getId()),\n                () -> assertEquals(user.getName(), "Yara"),\n                () -> assertEquals(user.getEmail(), "yara@example.com"),\n                () -> assertEquals(user.getUserType(), UserType.VIP)\n        );\n    }\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"\u66f4\u65b0",children:"\u66f4\u65b0"}),"\n",(0,s.jsxs)(r.p,{children:["\u4f7f\u7528 ",(0,s.jsx)(r.code,{children:"where"})," \u5b57\u6bb5\u53ef\u4ee5\u6307\u5b9a\u66f4\u65b0\u6761\u4ef6"]}),"\n",(0,s.jsx)(r.p,{children:"\u4f8b: \u901a\u8fc7\u7528\u6237\u540d\u66f4\u65b0\u7528\u6237\u7c7b\u578b"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    @Mutation(user = @UserMutationArguments($userType = "userType", where = @UserExpression(name = @StringExpression(opr = Operator.EQ, $val = "name"))))\n    // highlight-end\n    @SelectionSet("{ id name userType }")\n    Mono<User> updateUserTypeByName(UserType userType, String name);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u53d8\u66f4"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"mutation updateUserTypeByName($userType: UserType, $name: String) {\n  user(userType: $userType, where: { opr: EQ, val: $name }) {\n    id\n    name\n    userType\n  }\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void updateUserTypeByNameTest() {\n        User user = userRepository.updateUserTypeByName(UserType.REGULAR, "Yara").block();\n        assertAll(\n                () -> assertEquals(user.getName(), "Yara"),\n                () -> assertEquals(user.getUserType(), UserType.REGULAR)\n        );\n    }\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"\u5220\u9664",children:"\u5220\u9664"}),"\n",(0,s.jsxs)(r.p,{children:["\u901a\u8fc7\u8bbe\u7f6e ",(0,s.jsx)(r.code,{children:"isDeprecated = true"})," \u6765\u5220\u9664\u5bf9\u8c61"]}),"\n",(0,s.jsx)(r.p,{children:"\u4f8b: \u901a\u8fc7\u7528\u6237\u540d\u5220\u9664\u7528\u6237"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@GraphQLOperation\npublic interface UserRepository {\n\n    // highlight-start\n    @Mutation(user = @UserMutationArguments(isDeprecated = true, where = @UserExpression(name = @StringExpression(opr = Operator.EQ, $val = "name"))))\n    // highlight-end\n    @SelectionSet("{ id }")\n    Mono<User> removeUserByName(String name);\n}\n'})}),"\n",(0,s.jsx)(r.p,{children:"\u63a5\u53e3\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u53d8\u66f4"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-graphql",children:"mutation removeUserByName($name: String) {\n  user(isDeprecated: true, where: { opr: EQ, val: $name }) {\n    id\n  }\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@ExtendWith(TestResultLoggerExtension.class)\npublic class UserRepositoryTest {\n\n    private final UserRepository userRepository = BeanContext.get(UserRepository.class);\n\n    @Test\n    void removeUserByNameTest() {\n        User user = userRepository.removeUserByName("Yara").block();\n        assertNull(user);\n    }\n}\n'})}),"\n",(0,s.jsx)(r.h2,{id:"\u6ce8\u89e3\u8bf4\u660e",children:(0,s.jsx)(r.strong,{children:"\u6ce8\u89e3\u8bf4\u660e"})}),"\n",(0,s.jsx)(r.h3,{id:"\u63a5\u53e3\u6ce8\u89e3",children:"\u63a5\u53e3\u6ce8\u89e3"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"\u6ce8\u89e3"}),(0,s.jsx)(r.th,{children:"\u8bf4\u660e"}),(0,s.jsx)(r.th,{children:"\u793a\u4f8b"}),(0,s.jsx)(r.th,{children:"GraphQL \u64cd\u4f5c"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"@Query"}),(0,s.jsx)(r.td,{children:"\u5b9a\u4e49\u67e5\u8be2\u63a5\u53e3"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:"@Query(userList = @UserListQueryArguments(userType = @UserTypeExpression(opr = Operator.EQ, val = UserType.VIP)))"}),(0,s.jsx)("br",{}),"Mono<List<User>> queryVIPUserList();"]}),(0,s.jsxs)(r.td,{children:["query queryVIPUserList {",(0,s.jsx)("br",{}),"\u2003userList(userType: { opr: EQ, val: VIP }) {",(0,s.jsx)("br",{}),"\u2003\u2003id",(0,s.jsx)("br",{}),"\u2003\u2003name",(0,s.jsx)("br",{}),"\u2003\u2003userType",(0,s.jsx)("br",{}),"\u2003}",(0,s.jsx)("br",{}),"}"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"@Mutation"}),(0,s.jsx)(r.td,{children:"\u5b9a\u4e49\u53d8\u66f4\u63a5\u53e3"}),(0,s.jsxs)(r.td,{children:[(0,s.jsx)(r.strong,{children:'@Mutation(user = @UserMutationArguments($input = "userInput"))'}),(0,s.jsx)("br",{}),"Mono<User> mutationUser(UserInput userInput);"]}),(0,s.jsxs)(r.td,{children:["mutation mutationUser($userInput: UserInput) {",(0,s.jsx)("br",{}),"\u2003user(input: $userInput) {",(0,s.jsx)("br",{}),"\u2003\u2003id",(0,s.jsx)("br",{}),"\u2003\u2003name",(0,s.jsx)("br",{}),"\u2003\u2003userType",(0,s.jsx)("br",{}),"\u2003}",(0,s.jsx)("br",{}),"}"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"@SelectionSet"}),(0,s.jsx)(r.td,{children:"\u5b9a\u4e49\u67e5\u8be2\u5b57\u6bb5"}),(0,s.jsxs)(r.td,{children:["@Query(userList = @UserListQueryArguments(userType = @UserTypeExpression(opr = Operator.EQ, val = UserType.VIP)))",(0,s.jsx)("br",{}),(0,s.jsx)(r.strong,{children:'@SelectionSet("{ name }")'}),(0,s.jsx)("br",{}),"Mono<List<User>> queryVIPUserList();"]}),(0,s.jsxs)(r.td,{children:["query queryVIPUserList {",(0,s.jsx)("br",{}),"\u2003userList(userType: { opr: EQ, val: VIP }) {",(0,s.jsx)("br",{}),"\u2003\u2003",(0,s.jsx)(r.strong,{children:"name"}),(0,s.jsx)("br",{}),"\u2003}",(0,s.jsx)("br",{}),"}"]})]})]})]})]})}function d(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},5710:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var s=n(758);const t={},i=s.createContext(t);function a(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkgp_doc_github_io=self.webpackChunkgp_doc_github_io||[]).push([[6551],{6127:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=r(6070),t=r(5710);const s={sidebar_position:2},o="gRPC",a={id:"distributed/grpc",title:"gRPC",description:"gRPC \u662f\u4e00\u79cd\u9ad8\u6027\u80fd, \u5f00\u6e90\u7684\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff08RPC\uff09\u6846\u67b6, \u6700\u521d\u7531 Google \u5f00\u53d1. \u5b83\u4f7f\u7528 HTTP/2 \u4f5c\u4e3a\u4f20\u8f93\u534f\u8bae, \u5e76\u91c7\u7528 Protocol Buffers\uff08protobuf\uff09\u4f5c\u4e3a\u63a5\u53e3\u63cf\u8ff0\u8bed\u8a00\u548c\u6570\u636e\u5e8f\u5217\u5316\u683c\u5f0f. gRPC \u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00, \u53ef\u4ee5\u5b9e\u73b0\u8de8\u8bed\u8a00\u7684\u670d\u52a1\u8c03\u7528. \u5176\u7279\u70b9\u5305\u62ec\u53cc\u5411\u6d41, \u8d1f\u8f7d\u5747\u8861, \u8ba4\u8bc1\u548c\u8d85\u65f6\u63a7\u5236\u7b49, \u9002\u7528\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u9ad8\u6548\u901a\u4fe1",source:"@site/docs/distributed/grpc.md",sourceDirName:"distributed",slug:"/distributed/grpc",permalink:"/docs/distributed/grpc",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u5fae\u670d\u52a1",permalink:"/docs/distributed/microservices"},next:{title:"\u6821\u9a8c",permalink:"/docs/category/\u6821\u9a8c"}},p={},c=[{value:"\u6a21\u5757(package)",id:"\u6a21\u5757package",level:2},{value:"\u5b89\u88c5 protobuf \u63d2\u4ef6\u548c gRPC \u4f9d\u8d56",id:"\u5b89\u88c5-protobuf-\u63d2\u4ef6\u548c-grpc-\u4f9d\u8d56",level:3},{value:"\u751f\u6210 DTO \u548c protobuf",id:"\u751f\u6210-dto-\u548c-protobuf",level:3},{value:"\u670d\u52a1\u7aef(server)",id:"\u670d\u52a1\u7aefserver",level:2},{value:"\u5b89\u88c5 graphoenix-grpc-server \u6a21\u5757",id:"\u5b89\u88c5-graphoenix-grpc-server-\u6a21\u5757",level:3},{value:"\u542f\u52a8 gRPC \u670d\u52a1",id:"\u542f\u52a8-grpc-\u670d\u52a1",level:3},{value:"\u5ba2\u6237\u7aef(client)",id:"\u5ba2\u6237\u7aefclient",level:2},{value:"\u67e5\u8be2",id:"\u67e5\u8be2",level:3},{value:"\u53d8\u66f4",id:"\u53d8\u66f4",level:3},{value:"\u54cd\u5e94\u5f0f",id:"\u54cd\u5e94\u5f0f",level:3},{value:"\u8d1f\u8f7d\u5747\u8861",id:"\u8d1f\u8f7d\u5747\u8861",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",mermaid:"mermaid",p:"p",pre:"pre",...(0,t.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"grpc",children:"gRPC"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://grpc.io/",children:"gRPC"})," \u662f\u4e00\u79cd\u9ad8\u6027\u80fd, \u5f00\u6e90\u7684\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff08RPC\uff09\u6846\u67b6, \u6700\u521d\u7531 Google \u5f00\u53d1. \u5b83\u4f7f\u7528 HTTP/2 \u4f5c\u4e3a\u4f20\u8f93\u534f\u8bae, \u5e76\u91c7\u7528 ",(0,i.jsx)(n.a,{href:"https://protobuf.dev/",children:"Protocol Buffers"}),"\uff08protobuf\uff09\u4f5c\u4e3a\u63a5\u53e3\u63cf\u8ff0\u8bed\u8a00\u548c\u6570\u636e\u5e8f\u5217\u5316\u683c\u5f0f. ",(0,i.jsx)(n.a,{href:"https://grpc.io/",children:"gRPC"})," \u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00, \u53ef\u4ee5\u5b9e\u73b0\u8de8\u8bed\u8a00\u7684\u670d\u52a1\u8c03\u7528. \u5176\u7279\u70b9\u5305\u62ec\u53cc\u5411\u6d41, \u8d1f\u8f7d\u5747\u8861, \u8ba4\u8bc1\u548c\u8d85\u65f6\u63a7\u5236\u7b49, \u9002\u7528\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u9ad8\u6548\u901a\u4fe1"]}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n    subgraph "\u5ba2\u6237\u7aef(client)"\n        config[\u914d\u7f6egRPC\u5730\u5740]\n        invoke[\u8c03\u7528Stub\u63a5\u53e3]\n    end\n    subgraph "\u670d\u52a1\u7aef(server)"\n        server[gRPC\u670d\u52a1]\n        impl[Stub\u63a5\u53e3\u5b9e\u73b0]\n    end\n    subgraph "\u6a21\u5757(package)"\n        protobuf[protobuf]\n        stub[Stub\u63a5\u53e3]\n    end\n    config --\u5f15\u7528--\x3e invoke\n    invoke <--\u901a\u8baf--\x3e server\n    impl --\u5b9e\u73b0--\x3e stub\n    invoke <--\u8c03\u7528--\x3e stub\n    protobuf --\u751f\u6210--\x3e stub'}),"\n",(0,i.jsx)(n.h2,{id:"\u6a21\u5757package",children:"\u6a21\u5757(package)"}),"\n",(0,i.jsxs)(n.p,{children:["\u5b89\u88c5 protobuf \u63d2\u4ef6, \u6a21\u5757\u4f1a\u751f\u6210 gRPC \u7684 protobuf \u5b9a\u4e49\u548c\u5bf9\u5e94\u7684 Stub \u63a5\u53e3\u4f9b",(0,i.jsx)(n.a,{href:"#%E5%AE%A2%E6%88%B7%E7%AB%AFclient",children:"\u5ba2\u6237\u7aef(client)"}),"\u4f7f\u7528"]}),"\n",(0,i.jsx)(n.h3,{id:"\u5b89\u88c5-protobuf-\u63d2\u4ef6\u548c-grpc-\u4f9d\u8d56",children:"\u5b89\u88c5 protobuf \u63d2\u4ef6\u548c gRPC \u4f9d\u8d56"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gradle",metastring:'title="user-package/build.gradle"',children:"buildscript {\n    repositories {\n        mavenLocal()\n        jcenter()\n        gradlePluginPortal()\n    }\n    dependencies {\n        // highlight-start\n        classpath 'io.graphoenix:graphoenix-gradle-plugin:0.0.1-SNAPSHOT'\n        // highlight-end\n    }\n}\n\nplugins {\n    id 'java'\n    // highlight-start\n    id 'com.google.protobuf' version '0.9.1'\n    // highlight-end\n}\napply plugin: 'io.graphoenix'\nclasses.dependsOn {\n    generateGraphQLSource\n    // highlight-start\n    generateProtobufV3\n    // highlight-end\n}\n\n// highlight-start\n// gRPC \u914d\u7f6e\nprotobuf {\n    protoc {\n        artifact = 'com.google.protobuf:protoc:3.21.7'\n    }\n    plugins {\n        grpc {\n            artifact = 'io.grpc:protoc-gen-grpc-java:1.52.1'\n        }\n        reactor {\n            artifact = 'com.salesforce.servicelibs:reactor-grpc:1.2.3'\n        }\n    }\n    generateProtoTasks {\n        all()*.plugins {\n            grpc {}\n            reactor {}\n        }\n    }\n}\n// highlight-end\n\n// highlight-start\n// gRPC \u76ee\u5f55\u914d\u7f6e\nsourceSets {\n    main {\n        java {\n            srcDirs 'build/generated/source/proto/main/java'\n            srcDirs 'build/generated/source/proto/main/grpc'\n            srcDirs 'build/generated/source/proto/main/reactor'\n        }\n    }\n}\n// highlight-end\n\ndependencies {\n    implementation 'io.graphoenix:graphoenix-core:0.0.1-SNAPSHOT'\n    implementation 'io.nozdormu:nozdormu-inject:0.0.1-SNAPSHOT'\n    implementation 'io.nozdormu:nozdormu-async:0.0.1-SNAPSHOT'\n    implementation 'io.nozdormu:nozdormu-interceptor:0.0.1-SNAPSHOT'\n    implementation 'io.nozdormu:nozdormu-config:0.0.1-SNAPSHOT'\n\n    // highlight-start\n    // gRPC \u4f9d\u8d56\n    runtimeOnly 'io.grpc:grpc-netty-shaded:1.52.1'\n    implementation 'io.grpc:grpc-protobuf:1.52.1'\n    implementation 'io.grpc:grpc-stub:1.52.1'\n    implementation 'com.salesforce.servicelibs:reactor-grpc-stub:1.2.3'\n\n    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+\n    // highlight-end\n\n    annotationProcessor 'io.graphoenix:graphoenix-annotation-processor:0.0.1-SNAPSHOT'\n    annotationProcessor 'io.nozdormu:nozdormu-inject:0.0.1-SNAPSHOT'\n    annotationProcessor 'io.nozdormu:nozdormu-async:0.0.1-SNAPSHOT'\n    annotationProcessor 'io.nozdormu:nozdormu-interceptor:0.0.1-SNAPSHOT'\n    annotationProcessor 'io.nozdormu:nozdormu-config:0.0.1-SNAPSHOT'\n\n    protobuf 'io.graphoenix:graphoenix-core:0.0.1-SNAPSHOT'\n\n    testImplementation platform('org.junit:junit-bom:5.9.1')\n    testImplementation 'org.junit.jupiter:junit-jupiter'\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u751f\u6210-dto-\u548c-protobuf",children:"\u751f\u6210 DTO \u548c protobuf"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./gradlew :user-package:build\n"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsx)("summary",{children:"protobuf\u76ee\u5f55"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-txt",children:"|-- order-microservices\n    |-- user-package                                \u7528\u6237\u6a21\u5757\n        |-- build.gradle\n        |-- src\n            |-- main\n                |-- java\n                |   |-- demo.gp.user\n                |       |-- package-info.java\n                // highlight-start\n                |-- proto\n                |   |-- demo.gp.user\n                |       |-- enums.proto             \u679a\u4e3e\u7c7b\u578b\n                |       |-- input_objects.proto     \u8f93\u5165\u7c7b\u578b\n                |       |-- interfaces.proto        \u63a5\u53e3\u7c7b\u578b\n                |       |-- objects.proto           \u5bf9\u8c61\u7c7b\u578b\n                |       |-- query.proto             \u67e5\u8be2\u670d\u52a1\n                |       |-- mutation.proto          \u53d8\u66f4\u670d\u52a1\n                // highlight-end\n                |-- resources\n                    |-- graphql\n                        |-- user.gql                \u5b9a\u4e49\u7528\u6237\u76f8\u5173\u7c7b\u578b\n"})})]}),"\n",(0,i.jsx)(n.p,{children:"Graphoenix \u6839\u636e GraphQL \u751f\u6210\u5bf9\u5e94\u7684 protobuf \u5b9a\u4e49\u6587\u4ef6"}),"\n",(0,i.jsx)(n.mermaid,{value:'flowchart LR\n    uml[\u540e\u7aef\u5efa\u6a21]\n    grpc((gRPC\u670d\u52a1))\n    subgraph Graphoenix\n        schema["// types.graphql\n            type User {\n            &emsp;id: ID\n            &emsp;name: String!\n            &emsp;userType: UserType!\n            }"] -- \u8f6c\u8bd1 --\x3e protobuf["// types.proto\n            message Product {\n            &emsp;string id = 1;\n            &emsp;optional string name = 2;\n            &emsp;optional UserType userType = 3\n            }"] -- \u6784\u5efa --\x3e service["// service.proto\n            service QueryService {\n            &emsp;rpc User (Request) returns (Response);\n            &emsp;rpc UserList (Request) returns (Response);\n            &emsp;rpc UserConnection (Request) returns (Response);\n            }"]\n        style schema text-align:left\n        style protobuf text-align:left\n        style service text-align:left\n    end\n    uml --\x3e schema\n    service --\x3e grpc'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u670d\u52a1\u7aefserver",children:"\u670d\u52a1\u7aef(server)"}),"\n",(0,i.jsx)(n.h3,{id:"\u5b89\u88c5-graphoenix-grpc-server-\u6a21\u5757",children:"\u5b89\u88c5 graphoenix-grpc-server \u6a21\u5757"}),"\n",(0,i.jsxs)(n.p,{children:["\u5b89\u88c5 graphoenix-grpc-server \u6a21\u5757, Graphoenix \u5c06\u6839\u636e",(0,i.jsx)(n.a,{href:"#%E6%A8%A1%E5%9D%97package",children:"\u6a21\u5757(package)"}),"\u4e2d\u7684\u5b9a\u4e49\u81ea\u52a8\u5b9e\u73b0 gRPC \u670d\u52a1\u63a5\u53e3"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gradle",metastring:'title="user-app/build.gradle"',children:"dependencies {\n    implementation 'io.graphoenix:graphoenix-core:0.0.1-SNAPSHOT'\n    implementation 'io.graphoenix:graphoenix-r2dbc:0.0.1-SNAPSHOT'\n    // highlight-start\n    // gRPC \u670d\u52a1\n    implementation 'io.graphoenix:graphoenix-grpc-server:0.0.1-SNAPSHOT'\n    // highlight-end\n\n    implementation 'io.nozdormu:nozdormu-inject:0.0.1-SNAPSHOT'\n    implementation 'io.nozdormu:nozdormu-config:0.0.1-SNAPSHOT'\n\n    implementation 'org.mariadb:r2dbc-mariadb:1.1.4'\n\n    annotationProcessor 'io.graphoenix:graphoenix-annotation-processor:0.0.1-SNAPSHOT'\n    annotationProcessor 'io.graphoenix:graphoenix-sql:0.0.1-SNAPSHOT'\n    // highlight-start\n    // gRPC \u670d\u52a1\n    annotationProcessor 'io.graphoenix:graphoenix-grpc-server:0.0.1-SNAPSHOT'\n    // highlight-end\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u542f\u52a8-grpc-\u670d\u52a1",children:"\u542f\u52a8 gRPC \u670d\u52a1"}),"\n",(0,i.jsx)(n.p,{children:"Run/Debug user-app/src/main/java/demo/gp/user/App.java"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u5ba2\u6237\u7aefclient",children:"\u5ba2\u6237\u7aef(client)"}),"\n",(0,i.jsxs)(n.p,{children:["\u5f15\u7528\u9700\u8981\u8c03\u7528\u7684 ",(0,i.jsx)(n.a,{href:"#%E6%A8%A1%E5%9D%97package",children:"gRPC \u6a21\u5757(package)"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gradle",metastring:'title="order-package/build.gradle"',children:"dependencies {\n    // highlight-start\n    implementation project(':user-package')\n    // highlight-end\n    // ...\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u67e5\u8be2",children:"\u67e5\u8be2"}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"QueryServiceGrpc.QueryServiceBlockingStub"})," \u63a5\u53e3\u4e2d\u4e0e Query \u5bf9\u8c61\u4e2d\u540c\u540d\u7684\u65b9\u6cd5\u67e5\u8be2, \u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"setSelectionSet"})," \u65b9\u6cd5\u6765\u8bbe\u7f6e\u67e5\u8be2\u5b57\u6bb5"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import demo.gp.user.dto.enumType.grpc.UserType;\nimport demo.gp.user.grpc.*;\nimport io.graphoenix.core.dto.enumType.grpc.Operator;\nimport io.graphoenix.core.dto.inputObjectType.grpc.StringExpression;\nimport io.grpc.ManagedChannel;\nimport io.grpc.ManagedChannelBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class UserGrpcTest {\n\n    // highlight-start\n    // gRPC server \u5730\u5740\n    private static final String userGrpcAddress = "localhost:50053";\n    private static final ManagedChannel userManagedChannel = ManagedChannelBuilder.forTarget(userGrpcAddress).usePlaintext().build();\n    private static final QueryServiceGrpc.QueryServiceBlockingStub queryServiceStub = QueryServiceGrpc.newBlockingStub(userManagedChannel);\n    // highlight-end\n\n    @Test\n    void queryUserTest() {\n        // highlight-start\n        QueryUserRequest queryUserRequest = QueryUserRequest.newBuilder()\n                .setSelectionSet("{name userType}")\n                .setName(\n                        StringExpression.newBuilder()\n                                .setOpr(Operator.EQ_OPERATOR)\n                                .setVal("Alice")\n                                .build()\n                )\n                .build();\n        QueryUserResponse response = queryServiceStub.user(queryUserRequest);\n        // highlight-end\n\n        assertAll(\n                () -> assertEquals(response.getUser().getName(), "Alice"),\n                () -> assertEquals(response.getUser().getUserType(), UserType.VIP_USER_TYPE),\n                () -> assertEquals(response.getUser().getEmail(), "")\n        );\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u65b9\u6cd5\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u67e5\u8be2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:'query {\n  user(name: { opr: EQ, val: "Alice" }) {\n    name\n    userType\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u53d8\u66f4",children:"\u53d8\u66f4"}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"MutationServiceGrpc.MutationServiceBlockingStub"})," \u63a5\u53e3\u4e2d\u4e0e Mutation \u5bf9\u8c61\u4e2d\u540c\u540d\u7684\u65b9\u6cd5\u53d8\u66f4, \u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"setSelectionSet"})," \u65b9\u6cd5\u6765\u8bbe\u7f6e\u67e5\u8be2\u5b57\u6bb5"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import demo.gp.user.dto.enumType.grpc.UserType;\nimport demo.gp.user.grpc.*;\nimport io.graphoenix.core.dto.enumType.grpc.Operator;\nimport io.graphoenix.core.dto.inputObjectType.grpc.StringExpression;\nimport io.grpc.ManagedChannel;\nimport io.grpc.ManagedChannelBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class UserGrpcTest {\n\n    // highlight-start\n    // gRPC server \u5730\u5740\n    private static final String userGrpcAddress = "localhost:50053";\n    private static final ManagedChannel userManagedChannel = ManagedChannelBuilder.forTarget(userGrpcAddress).usePlaintext().build();\n    private static final MutationServiceGrpc.MutationServiceBlockingStub mutationServiceBlockingStub = MutationServiceGrpc.newBlockingStub(userManagedChannel);\n    // highlight-end\n\n    @Test\n    void MutationUserTest() {\n        // highlight-start\n        MutationUserRequest mutationUserRequest = MutationUserRequest.newBuilder()\n                .setName("Uma")\n                .setEmail("uma@example.com")\n                .setUserType(UserType.VIP_USER_TYPE)\n                .build();\n        MutationUserResponse response = mutationServiceBlockingStub.user(mutationUserRequest);\n        // highlight-end\n\n        assertAll(\n                () -> assertEquals(response.getUser().getName(), "Uma"),\n                () -> assertEquals(response.getUser().getEmail(), "uma@example.com"),\n                () -> assertEquals(response.getUser().getUserType(), UserType.VIP_USER_TYPE)\n        );\n    }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u65b9\u6cd5\u7b49\u540c\u4e8e\u5982\u4e0b GraphQL \u53d8\u66f4"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-graphql",children:'mutaion {\n  user(name: "Uma", email: "uma@example.com", userType: VIP) {\n    id\n    name\n    email\n    userType\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u54cd\u5e94\u5f0f",children:"\u54cd\u5e94\u5f0f"}),"\n",(0,i.jsxs)(n.p,{children:["Graphoenix \u652f\u6301 ",(0,i.jsx)(n.a,{href:"https://github.com/salesforce/reactive-grpc",children:"Reactive gRPC"}),", \u54cd\u5e94\u5f0f Stub \u4ee5 Reactor \u5f00\u5934\u547d\u540d"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import demo.gp.user.dto.enumType.grpc.UserType;\nimport demo.gp.user.grpc.*;\nimport io.graphoenix.core.dto.enumType.grpc.Operator;\nimport io.graphoenix.core.dto.inputObjectType.grpc.StringExpression;\nimport io.grpc.ManagedChannel;\nimport io.grpc.ManagedChannelBuilder;\nimport org.junit.jupiter.api.Test;\nimport reactor.core.publisher.Mono;\nimport reactor.test.StepVerifier;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\npublic class UserGrpcTest {\n\n    // highlight-start\n    // gRPC server \u5730\u5740\n    private static final String userGrpcAddress = "localhost:50053";\n    private static final ManagedChannel userManagedChannel = ManagedChannelBuilder.forTarget(userGrpcAddress).usePlaintext().build();\n    // \u54cd\u5e94\u5f0f Stub\n    private static final ReactorQueryServiceGrpc.ReactorQueryServiceStub reactorQueryServiceStub = ReactorQueryServiceGrpc.newReactorStub(userManagedChannel);\n    // highlight-end\n\n    @Test\n    void reactorQueryUserTest() {\n        // highlight-start\n        QueryUserRequest queryUserRequest = QueryUserRequest.newBuilder()\n                .setName(\n                        StringExpression.newBuilder()\n                                .setOpr(Operator.EQ_OPERATOR)\n                                .setVal("Bob")\n                                .build()\n                )\n                .build();\n        Mono<QueryUserResponse> responseMono = reactorQueryServiceStub.user(queryUserRequest);\n        // highlight-end\n\n        StepVerifier.create(responseMono)\n                .assertNext(response ->\n                        assertAll(\n                                () -> assertEquals(response.getUser().getName(), "Bob"),\n                                () -> assertEquals(response.getUser().getEmail(), "bob@example.com"),\n                                () -> assertEquals(response.getUser().getUserType(), UserType.REGULAR_USER_TYPE)\n                        )\n                )\n                .expectComplete()\n                .verify();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u8d1f\u8f7d\u5747\u8861",children:"\u8d1f\u8f7d\u5747\u8861"}),"\n",(0,i.jsxs)(n.p,{children:["Graphoenix \u63d0\u4f9b ",(0,i.jsx)(n.code,{children:"PackageNameResolverProvider"})," \u652f\u6301 gRPC \u8d1f\u8f7d\u5747\u8861, \u4f7f\u7528 ",(0,i.jsx)(n.code,{children:"package://package.name"})," \u4f5c\u4e3a\u6a21\u5757\u5730\u5740, \u63d0\u4f9b ",(0,i.jsx)(n.code,{children:"pick_first"})," \u548c ",(0,i.jsx)(n.code,{children:"round_robin"})," \u4e24\u79cd\u7b56\u7565"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import io.grpc.ManagedChannel;\nimport io.grpc.NameResolverRegistry;\nimport io.graphoenix.grpc.client.resolver.PackageNameResolverProvider;\n\npublic class UserGrpcTest {\n\n    // private static final String userGrpcAddress = "localhost:50053";\n    // private static final ManagedChannel userManagedChannel = ManagedChannelBuilder.forTarget(userGrpcAddress).usePlaintext().build();\n    // highlight-start\n    // gRPC server \u5730\u5740\n    private static final String userGrpcAddress = "package://demo.gp.user";\n    private static final ManagedChannel userManagedChannel = ManagedChannelBuilder.forTarget(userGrpcAddress).defaultLoadBalancingPolicy("round_robin").usePlaintext().build()\n    // highlight-end\n    private static final QueryServiceGrpc.QueryServiceBlockingStub queryServiceStub = QueryServiceGrpc.newBlockingStub(userManagedChannel);\n\n    @Inject\n    public UserGrpcTest(PackageNameResolverProvider packageNameResolverProvider) {\n        // highlight-start\n        // \u6ce8\u518c\u5730\u5740\u5de5\u5382\n        NameResolverRegistry.getDefaultRegistry().register(packageNameResolverProvider);\n        // highlight-end\n    }\n}\n'})})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},5710:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(758);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);